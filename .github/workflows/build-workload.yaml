name: Build CI image

on:
  push:
    tags:
    - '*'

jobs:
  build-image:
    name: Build and Package FireSim Linux images
    runs-on: ubuntu-latest

    permissions:
      contents: write

    container:
      image: ghcr.io/nandor/riscv-llvm-image:v0.0.5
      options: --privileged

    steps:
      - name: Install Python dependencies
        run: |
          pip install humanfriendly doit GitPython psutil

      - name: Checkout the repository
        uses: actions/checkout@v3.2.0
        with:
          fetch-depth: 2
          submodules: recursive

      - name: Get the FireSim repository
        uses: actions/checkout@v3.2.0
        with:
          repository: firesim/FireMarshal
          ref: master
          path: FireMarshal
          fetch-depth: 1
          submodules: false

      - name: Get the FireSim repository
        uses: actions/checkout@v3.2.0
        with:
          repository: firesim/firesim
          ref: main
          path: firesim
          fetch-depth: 1
          submodules: false

      - name: Configure environment
        id: env
        run: |
          echo "marshal-hash=$(cd FireMarshal && git rev-parse @)" >> $GITHUB_OUTPUT

      - name: Build & cache Linux image
        uses: ./.github/actions/build-and-cache
        with:
          key: ${{ runner.os }}-${{ steps.env.outputs.marshal-hash }}
          path: |
            FireMarshal/images/br-base/br-base.img
            FireMarshal/images/br-base/br-base-bin
          run: |
            cd FireMarshal
            git submodule update --init --depth 1 boards/default/linux
            git submodule update --init --depth 1 boards/default/firmware/riscv-pk
            git submodule update --init --depth 1 boards/default/firmware/opensbi
            git submodule update --init --depth 1 wlutil/busybox
            git submodule update --init --depth 1 boards/default/distros/br/buildroot
            git submodule update --init --depth 1 boards/firechip/drivers/*
            ./marshal -v build br-base.json

      - name: Set up environment
        run: |
          echo "ROOT=$(pwd)" >> $GITHUB_ENV
          echo "MARSHAL_DIR=$(pwd)/FireMarshal" >> $GITHUB_ENV

      - name: Package Test - bare
        run: |
          export BUILD_DIR=/tmp/images/image
          mkdir -p $BUILD_DIR

          export OVERLAY_DIR=$BUILD_DIR/overlay
          mkdir -p $OVERLAY_DIR

          make -C $ROOT/firesim/sw/check-rtc print-mcycle-linux
          cp $ROOT/firesim/sw/check-rtc/print-mcycle-linux $OVERLAY_DIR/print-mcycle-linux

          python3 $ROOT/firesim/deploy/workloads/gen-benchmark-rootfs.py \
            -r \
            -w $ROOT/firesim/deploy/workloads/linux-poweroff.json \
            -b $MARSHAL_DIR/images/br-base/br-base.img \
            -s $OVERLAY_DIR \
            -o $BUILD_DIR
          rm -rf $OVERLAY_DIR

          mv $BUILD_DIR/poweroffnode.ext2 $BUILD_DIR/blkdev0.ext2
          cp $MARSHAL_DIR/images/br-base/br-base-bin $BUILD_DIR/bootbin

          cd /tmp/images
          tar czvf linux-poweroff.tar.gz image
          rm -rf /tmp/images/image

      - name: Package Test - bare
        run: |
          # Build the test.
          cd FireMarshal
          ./marshal -v build test/bare.yaml
          cd ..

          export BUILD_DIR=/tmp/images/image
          mkdir -p $BUILD_DIR

          cp $MARSHAL_DIR/test/bare/hello $BUILD_DIR/bootbin

          cd /tmp/images
          tar czvf bare.tar.gz image
          rm -rf /tmp/images/image

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/images/*.tar.gz"
